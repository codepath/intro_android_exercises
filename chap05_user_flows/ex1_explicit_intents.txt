Goal: Launch other activities in the application via explicit intents.

Description:
An explicit intent is how to launch one Activity in an application from another Activity in the same application. The intent's primary role is to specify which Activity class is to be launched. However, it can also pass along data which the new Activity can read.

All activities are associated with an originating intent. Retrieve the originating intent at any time using the method getIntent().

Directions:
1) Add a button to the default activity and label it "Launch".
2) Register a click handler via XML or Java
3) In the click handler method,
  a) Create an intent, initializing it with the Activity to be launched.
  b) Put a string "extra" in the intent.
  c) Start the second activity.
4) In the second Activity,
  a) Get the originating intent using getIntent()
  b) Get the string "extra" from the intent.
  c) Set the text of a TextView to the string "extra".


## Snippets

// In Activity
Button btnLaunchSecond = (Button) findViewById(R.id.btnLaunchSecond);
btnLaunchSecond.setOnClickListener(new OnClickListener() {
  @Override
  public void onClick(View v) {
    Intent i = new Intent(getBaseContext(), SimpleBundleDemoActivity.class);
    i.putExtra("text", "Passed String Extra!");
    startActivity(i);
  }
});

// In Launched Activity
String initialText = getIntent().getStringExtra("text");
TextView tvDisplayText = (TextView) findViewById(R.id.tvDisplayText);
tvDisplayText.setText(initialText);
